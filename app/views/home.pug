extends layout

block pageBody
  .home
    if user
      .container
        if (user.role == "Employee")
          .padding-top-sm
            .col-md-5.home-left-col
              h3(style="margin-top:0; padding-bottom: 15px;") Welcome to Performify 
                span.user-name(style="color: gray; text-transform: capitalize; ") #{user.name}
              br
              h4 My Self Reviews
              ul.list-group
                each perReview, i in perReviewss
                  li.list-group-item.list-reviews
                    a(style="font-size:18px;" href='/perReviews/'+perReview._id)= moment(perReview.date).format("h:mm:ss, MMMM Do YYYY ") 
              br
              br
              h4 My Reviews From Lead
                ul.list-group
                  each perReview, i in perReviews
                    li.list-group-item.list-reviews
                      a(style="font-size:18px;" href='/perReviews/'+perReview._id)= moment(perReview.date).format("h:mm:ss a, MMMM Do YYYY ")
              br
              br
              h4 Last Submitted Engagement Survay
                ul.list-group.engagement-view
                  each engagement, i in engagements
                    li.list-group-item.list-reviews(style="height:40px;")
                      p(style="font-size:18px;")= moment(engagement.date).format("h:mm:ss a, MMMM Do YYYY ")
            .col-md-7.home-right-col
              .center.float-none
                canvas#userReviews(width="auto" height="507")
              br
              br
              a(class='button btn btn-default1 ', style="width: 100%;" href='/perReviews/add_self_review') Submit Self Review
              br
              br
              br
              a(class='button btn btn-default1', style="width: 100%;" href='/engagements/submit_engagement_survey') Submit Employee Enagagement Survay
        else if (user.role == "Management")
          h3(style="margin-top:0; padding-bottom: 15px;") Welcome 
            span.user-name(style="color: gray; text-transform: capitalize; ") #{ user.name}
          .row
            .col-md-7.home-left-col.padding-top-sm.padding-bottom-sm
              .chart-col-8(style="width:auto!important")
                canvas#PerformanceReviewAverage(width="250" height="250" style="display:block; height:400px; width:522px;")
            .col-md-5.home-right-col.padding-top-sm.padding-bottom-sm
              .chart-col-4.center.float-none
                canvas#GenderRatioOnTeam(width="250" height="250")
          .row
            .col-md-7.home-left-col.padding-top-sm.padding-bottom-sm
              .div.center.padding-top-sm(style="width:60%")
                .float-none.padding-top-md
                  a(class='button btn btn-default1 btn-primary center', style="width: 100%; " href='/perReviews/add_employee_review') Submit Review for Employee
            .col-md-5.home-right-col
              .card.center.float-none(style="width:80%")
                .center
                  h3(style="font-size:20px; font-weight:700; margin-top: 10px; text-align:center;") Average Team Overall Result From Performance Review 
                  h4#average(style="font-size:24px;  margin-top: 10px; text-align:center; color: slategrey; text-decoration: underline;")
        else if (user.role == "Senior Management")
          h3(style="margin-top:0; padding-bottom: 15px;") Welcome 
            span.user-name(style="color: gray; text-transform: capitalize; ") #{ user.name}
          .row
            .col-md-7.home-left-col.padding-top-sm.padding-bottom-sm
              .chart-col-8(style="width:auto!important")
                canvas#companyPerformance(style="display:block; height:300px; width:auto;")
            .col-md-5.home-right-col.padding-top-sm.padding-bottom-sm
              .chart-col-4.center.float-none
                canvas#NumberPeopleOnTeams(width="250" height="250")
          .row
            .col-md-7.home-left-col.padding-top-sm.padding-bottom-sm
              .div
                .card(style="height:298px;")
                  .center.padding-lg
                    h3.padding-left-sm.padding-right-sm.padding-top-sm(style="font-size:19px; font-weight:700; margin-top: 10px; text-align:center;") Average Overall Result From Performance Review for Company
                    h4#companyAverage(style="font-size:23px;  margin-top: 10px; text-align:center; color: slategrey; text-decoration: underline;")
              .center-hold(style="height:100%;")
                .div.center.padding-top-sm(style="width:60%")
                  .float-none.padding-top-md
                    a(class='button btn btn-default1 btn-primary center', style="width: 100%; " href='/perReviews/add_manager_review') Submit Review for Manager
            .col-md-5.home-right-col.padding-top-sm.padding-bottom-sm
              .chart-col-4.center.float-none
                canvas#GenderRatioChart(width="250" height="250")
        else if (user.role == "Administrator")
          h3(style="margin-top:0;") Welcome 
            span.user-name(style="color: gray; text-transform: capitalize; ") #{user.name}
          .col-sm-6.home-left-col.padding-top-sm.padding-bottom-sm
            .gen-chart.center.float-none
              canvas#NumberPeopleOnTeams(width="250" height="250")
          .col-sm-6.home-right-col.padding-top-sm
            .gen-chart.center.float-none
              canvas#GenderRatioChart(width="250" height="250")
    else
      .col-md-6.center.float-none
        h1 Welcome to Performify
        h2.text-center Please Login
        .btn-hold
          .btn-inner
            a(class='button btn btn-default1 btn-login', style="width: 30%; margin-left: 35%;" href='/users/login') Login
              i.fas.fa-sign-in-alt(style="margin-left:10px;")
    script.
      function randColour() {
        return Math.ceil(Math.random() * 255);
      }
      $.get('https://performify.herokuapp.com/chartsEndpoints/ListUsers', {}, function(data){
        var g = data;
        let Female = 0;
        let Male = 0;
        let Transgender = 0;
        let Other = 0
        for (var i = 0; i < g.length; i++) {
          if (g[i].gender === 'Female') {
            Female += 1;
          }
          else if (g[i].gender === 'Male') {
            Male += 1;
          }
          else if (g[i].gender === 'Transgender') {
            Transgender += 1;
          }
          else {
            Other+= 1;
          }
        }
        let genderLabels = ['Male', 'Female', 'Trangender' , 'Other'];
        var ctx = document.getElementById("GenderRatioChart").getContext('2d');
        var GenderRatioChart = new Chart(ctx, {
          type: 'doughnut',
          data: {
              labels: genderLabels,
              datasets: [{
                  label: 'Gender Ratio',
                  data:[Male , Female , Transgender , Other],
                  backgroundColor: ['rgba(255, 99, 132, 0.2)', 'rgba(75, 192, 192, 0.2)','rgba(153, 102, 255, 0.2)','rgba(255, 159, 64, 0.2)'],
                  borderColor: ['rgba(255,99,132,1)','rgba(255, 206, 86, 1)','rgba(75, 192, 192, 1)','rgba(153, 102, 255, 1)'],
                  borderWidth: 0
              }]
          },
          options: {
            responsive: true,
            title: { display: true, position: "top", text: "Gender Ratio", fontSize: 20, fontColor: "#111"},
            legend: { display: true, position: "bottom", labels: { fontColor: "#333", fontSize: 16} }
          }
        });
      });
      $.get('https://performify.herokuapp.com/chartsEndpoints/team', {}, function(data){
        var g = data;
        let Female = 0;
        let Male = 0;
        let Transgender = 0;
        let Other = 0
        for (var i = 0; i < g.length; i++) {
          if (g[i].gender === 'Female') {
            Female += 1;
          }
          else if (g[i].gender === 'Male') {
            Male += 1;
          }
          else if (g[i].gender === 'Transgender') {
            Transgender += 1;
          }
          else {
            Other+= 1;
          }
        }
        let genderLabels = ['Male', 'Female', 'Trangender' , 'Other'];
        var ctx = document.getElementById("GenderRatioOnTeam").getContext('2d');
        var GenderRatioOnTeam = new Chart(ctx, {
          type: 'doughnut',
          data: {
              labels: genderLabels,
              datasets: [{
                  label: 'Gender',
                  data:[Male , Female , Transgender , Other],
                  backgroundColor: [
                      'rgba(255, 99, 132)',
                      'rgba(75, 192, 192, 0.5)',
                      'rgba(153, 102, 255, 0.5)',
                      'rgba(255, 159, 64, 0.5)',
                      'rgba(229, 158, 175, 0.5)',
                      'rgba(65,79,111)',
                      'rgba(153,153,204)',
                      'rgba(254,255,163, 0.85)'
                  ],
                  borderColor: [
                      'rgba(255,99,132,1)',
                      'rgba(255, 206, 86, 1)',
                      'rgba(75, 192, 192, 1)',
                      'rgba(153, 102, 255, 1)',
                      'rgba(255, 159, 64, 1)'
                  ],
                  borderWidth: 0
              }]
          },
          options: {
            responsive: true,
            title: {
              display: true,
              position: "top",
              text: "Gender Ratio On Team: " + g[0].team,				
              fontSize: 20,
              fontColor: "#111"
            },
            legend: {
              display: true,
              position: "bottom",
              labels: {
                fontColor: "#333",
                fontSize: 16
              }
            }
          }
        });
      });
      $.get('https://performify.herokuapp.com/chartsEndpoints/teamOverallResult', {}, function(data){
          let colors = ['rgba(234, 128, 252, 0.4)', 'rgba(0, 102, 204, 0.4)', 'rgba(0, 150, 233, 0.4)', 'rgba(255, 128, 171, 0.4)', 'rgba(140, 158, 255, 0.4)', 'rgba(128, 203, 196, 0.4)', 'rgba(101, 225, 105, 0.4)', 'rgba(255, 183, 77, 0.4)','rgba(24, 255, 255, 0.4)', 'rgba(213, 0, 249, 0.4)', 'rgba(0, 102, 204, 0.4)', 'rgba(255, 255, 0, 0.4)']
          //- for (i in colors){
          //-   console.log(colors[i]);
          //- }
          let datasets = [];
          for (let user of data) {
            let reviews = user.reviews;
            let labels = [];
            let scores = [];
            for (let review of reviews) {
              scores.push(review.overallResult);
            }
            datasets.push({
              label: user.name,
              backgroundColor: colors[Math.round(Math.random() * colors.length)],
              data: scores,
              opacity: 0.2,
            })
          }
          //- console.log('----------------------',datasets);
          var ctx = document.getElementById("PerformanceReviewAverage").getContext('2d');
          var PerformanceReviewAverage = new Chart(ctx, {
            type: 'line',
            labels: ['Review 1', 'Review 2', 'Review 3'],
            data: {
                xLabels: ['Review 1',  'Review 2', 'Review 3'],
                yLabels: ['outstanding',  'Exceeds Expectations' ,  'Meets Expectations' ,  'Needs Improvement', 'Unsatisfactory'],
                datasets: datasets,
            },
            options: {
              scales: {
                xAxes: [{
                  display: true,
                  scaleLabel: {
                    display: true,
                    labelString: 'Review'
                  }
                }],
                yAxes: [{
                  type: 'category',
                  position: 'left',
                  display: true,
                  scaleLabel: {
                    display: true,
                    labelString: 'Review Result'
                  }
                }]
              },
              maintainAspectRatio: false,
              responsive: true,
              title: {
                display: true,
                position: "top",
                text: "Team Performance Review Average ",				
                fontSize: 20,
                fontColor: "#111"
              },
              legend: {
                display: true,
                position: "bottom",
                labels: {
                  fontColor: "#333",
                  fontSize: 16
                }
              }
            }
          });
      });
      $.get('https://performify.herokuapp.com/chartsEndpoints/listTeamAverage', {}, function(data){
        var div = document.getElementById('average');
        div.innerHTML += data;
      });
      $.get('https://performify.herokuapp.com/chartsEndpoints/listCompanyAverage', {}, function(data){
        var div = document.getElementById('companyAverage');
        div.innerHTML += data;
      });
      $.get('https://performify.herokuapp.com/chartsEndpoints/listUsers2', {}, function(data){
        var g = data;
        let Finance = 0;
        let Marketing = 0;
        let Testing = 0;
        let Engineering = 0;
        let Sales = 0;
        let HR = 0;
        let IT = 0;
        let Support = 0;
        for (var i = 0; i < g.length; i++) {
          if (g[i].team === 'Finance') {
            Finance += 1;
          }
          else if (g[i].team === 'Marketing') {
            Marketing += 1;
          }
          else if (g[i].team === 'Testing') {
            Testing += 1;
          }
          else if (g[i].team === 'Engineering') {
            Engineering += 1;
          }
          else if (g[i].team === 'Sales') {
            Sales += 1;
          }
          else if (g[i].team === 'HR') {
            HR += 1;
          }
          else if (g[i].team === 'IT') {
            IT += 1;
          }
          else {
            Support+= 1;
          }
        }
        let teamLabels = ['Finance', 'Marketing', 'Testing', 'Engineering', 'Sales', 'HR', 'IT', 'Support'];
        var ctx = document.getElementById("NumberPeopleOnTeams").getContext('2d');
        var NumberPeopleOnTeams = new Chart(ctx, {
          type: 'doughnut',
          data: {
              labels: teamLabels,
              datasets: [{
                  label: '# of Votes',
                  data:[Finance, Marketing, Testing, Engineering, Sales, HR, IT, Support],
                  backgroundColor: [
                      'rgba(255, 99, 132)',
                      'rgba(75, 192, 192, 0.5)',
                      'rgba(153, 102, 255, 0.5)',
                      'rgba(255, 159, 64, 0.5)',
                      'rgba(229, 158, 175, 0.5)',
                      'rgba(65,79,111)',
                      'rgba(153,153,204)',
                      'rgba(254,255,163, 0.85)'
                  ],
                  borderColor: [
                      'rgba(255,99,132,1)',
                      //- 'rgba(54, 162, 235, 1)',
                      'rgba(255, 206, 86, 1)',
                      'rgba(75, 192, 192, 1)',
                      'rgba(153, 102, 255, 1)',
                      'rgba(255, 159, 64, 1)'
                  ],
                  borderWidth: 0
              }]
          },
          options: {
            responsive: true,
            title: {
              display: true,
              position: "top",
              text: "Company Breakdown",				
              fontSize: 20,
              fontColor: "#111"
            },
            legend: {
              display: true,
              position: "bottom",
              labels: {
                fontColor: "#333",
                fontSize: 16
              }
            }
          }
        });
      });
      $.get('https://performify.herokuapp.com/chartsEndpoints/getUserReviews', {}, function(data){
        let colors = ['rgba(234, 128, 252, 0.4)', 'rgba(0, 102, 204, 0.4)', 'rgba(0, 150, 233, 0.4)', 'rgba(255, 128, 171, 0.4)', 'rgba(140, 158, 255, 0.4)', 'rgba(128, 203, 196, 0.4)', 'rgba(101, 225, 105, 0.4)', 'rgba(255, 183, 77, 0.4)','rgba(24, 255, 255, 0.4)', 'rgba(213, 0, 249, 0.4)', 'rgba(0, 102, 204, 0.4)', 'rgba(255, 255, 0, 0.4)']
        for (i in colors){
          console.log(colors[i]);
        }
        let datasets = [];
        let labels = [];
        let scores = [];
        for (let i of data) {
          scores.push(i.overallResult);
        };
        datasets.push({
          label: i.userSelected,
          backgroundColor: colors[i],
          data: scores,
          opacity: 0.2,
        });
        var ctx = document.getElementById("userReviews").getContext('2d');
        var userReviews = new Chart(ctx, {
          type: 'line',
          labels: ['Review 1', 'Review 2', 'Review 3'],
          data: {
              xLabels: ['Review 1',  'Review 2', 'Review 3'],
              yLabels: ['outstanding',  'Exceeds Expectations' ,  'Meets Expectations' ,  'Needs Improvement', 'Unsatisfactory'],
              datasets: datasets,
          },
          options: {
            scales: {
              xAxes: [{
                display: true,
                scaleLabel: {
                  display: true,
                  labelString: 'Review'
                }
              }],
              yAxes: [{
                type: 'category',
                position: 'left',
                display: true,
                scaleLabel: {
                  display: true,
                  labelString: 'Review Result'
                }
              }]
            },
            maintainAspectRatio: false,
            responsive: true,
            title: {
              display: true,
              position: "top",
              text: "My Last Three Performance Reviews ",				
              fontSize: 20,
              fontColor: "#111"
            },
            legend: {
              display: false,
              position: "bottom",
              labels: {
                fontColor: "#333",
                fontSize: 16
              }
            }
          }
        });
      });
      $.get('https://performify.herokuapp.com/chartsEndpoints/getAverageForEachTeam', {}, function(data){
        var ctx = document.getElementById("companyPerformance").getContext('2d');
        var companyPerformance = new Chart(ctx, {
          type: 'line',
          data: {
            yLabels: ['outstanding',  'Exceeds Expectations' ,  'Meets Expectations' ,  'Needs Improvement', 'Unsatisfactory'],
            xLabels: Object.keys(data),
            datasets: [
              {
                backgroundColor: ["rgba(234, 128, 252, 0.4)"],
                data: Object.values(data)
              }
            ]
          },
          options: {
            responsive: true,
            scales: {
              xAxes: [{
                display: true,
                scaleLabel: {
                  display: true,
                  labelString: 'Review'
                }
              }],
              yAxes: [{
                type: 'category',
                position: 'left',
                display: true,
                scaleLabel: {
                  display: true,
                  labelString: 'Review Result'
                }
              }]
            },
            maintainAspectRatio: false,
            legend: { display: false },
            title: {
              fontColor: "#333",
              display: true,
              fontSize: 20,
              text: 'Average Performance Review Overall Result Per Result'
            }
          }
        });
      });
